name: New library version
on:
  pull_request:
    branches:
      - main
    types:
      - closed
#  push:
#    branches:
#      - main
#    tags-ignore:
#      - '*'

defaults:
  run:
    shell: bash

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  FORCE_COLOR: 3

jobs:
  generate_tag:
    timeout-minutes: 1
    if: github.event.repository.full_name == github.repository && github.event.pull_request.merged
    name: Generate a new patch version
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure Git Credentials
        run: |
          git config --global user.email "robotito@legendaryum.com"
          git config --global user.name "botito"
      - name: Generate tag
        run: bash ./scripts/generate-tag.sh
  goreleaser:
    timeout-minutes: 1
    name: Release new version
    permissions:
      contents: write
    needs:
      - generate_tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{ github.workspace }}/go.mod
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: 'latest'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set last tag
        run: |
          last_tag=$(git describe --tags --abbrev=0 --match 'v*' 2>/dev/null)
          echo "LAST_TAG=$last_tag" >> $GITHUB_ENV
      - name: Generate Notification
        id: notification
        continue-on-error: true
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "Release Notification: ${{ github.repository }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":tada: *New Release Available* :tada:"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Repository:*\n${{ github.repository }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:*\n${{ github.ref_name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit SHA:*\n${{ github.sha }}"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Release Details"
                      },
                      "url": "https://github.com/${{ github.repository }}/releases/tag/${{ env.LAST_TAG }}"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "go library"
                      },
                      "url": "https://pkg.go.dev/github.com/legendaryum-metaverse/saga"
                    }
                  ]
                }            
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
